instruction memory:
	instrMem[ 0 ] = lw 0 2 8
	instrMem[ 1 ] = lw 0 3 9
	instrMem[ 2 ] = add 2 2 2
	instrMem[ 3 ] = add 3 3 3
	instrMem[ 4 ] = add 2 2 2
	instrMem[ 5 ] = add 2 2 2
	instrMem[ 6 ] = add 2 2 2
	instrMem[ 7 ] = halt 0 0 0
	instrMem[ 8 ] = add 0 0 7
	instrMem[ 9 ] = add 0 0 4

@@@
state before cycle 0 starts:
	pc = 0
	data memory:
		dataMem[ 0 ] = 8519688
		dataMem[ 1 ] = 8585225
		dataMem[ 2 ] = 1179650
		dataMem[ 3 ] = 1769475
		dataMem[ 4 ] = 1179650
		dataMem[ 5 ] = 1179650
		dataMem[ 6 ] = 1179650
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = 7
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 0 (Don't Care)
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 1 starts:
	pc = 1
	data memory:
		dataMem[ 0 ] = 8519688
		dataMem[ 1 ] = 8585225
		dataMem[ 2 ] = 1179650
		dataMem[ 3 ] = 1769475
		dataMem[ 4 ] = 1179650
		dataMem[ 5 ] = 1179650
		dataMem[ 6 ] = 1179650
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = 7
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8519688 ( lw 0 2 8 )
		pcPlus1 = 1
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 2 starts:
	pc = 2
	data memory:
		dataMem[ 0 ] = 8519688
		dataMem[ 1 ] = 8585225
		dataMem[ 2 ] = 1179650
		dataMem[ 3 ] = 1769475
		dataMem[ 4 ] = 1179650
		dataMem[ 5 ] = 1179650
		dataMem[ 6 ] = 1179650
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = 7
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8585225 ( lw 0 3 9 )
		pcPlus1 = 2
	ID/EX pipeline register:
		instruction = 8519688 ( lw 0 2 8 )
		pcPlus1 = 1
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 8
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 3 starts:
	pc = 3
	data memory:
		dataMem[ 0 ] = 8519688
		dataMem[ 1 ] = 8585225
		dataMem[ 2 ] = 1179650
		dataMem[ 3 ] = 1769475
		dataMem[ 4 ] = 1179650
		dataMem[ 5 ] = 1179650
		dataMem[ 6 ] = 1179650
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = 7
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 1179650 ( add 2 2 2 )
		pcPlus1 = 3
	ID/EX pipeline register:
		instruction = 8585225 ( lw 0 3 9 )
		pcPlus1 = 2
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 9
	EX/MEM pipeline register:
		instruction = 8519688 ( lw 0 2 8 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 8
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 4 starts:
	pc = 4
	data memory:
		dataMem[ 0 ] = 8519688
		dataMem[ 1 ] = 8585225
		dataMem[ 2 ] = 1179650
		dataMem[ 3 ] = 1769475
		dataMem[ 4 ] = 1179650
		dataMem[ 5 ] = 1179650
		dataMem[ 6 ] = 1179650
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = 7
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 1769475 ( add 3 3 3 )
		pcPlus1 = 4
	ID/EX pipeline register:
		instruction = 1179650 ( add 2 2 2 )
		pcPlus1 = 3
		readRegA = 0
		readRegB = 0
		offset = 9 (Don't Care)
	EX/MEM pipeline register:
		instruction = 8585225 ( lw 0 3 9 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 9
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8519688 ( lw 0 2 8 )
		writeData = 7
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 5 starts:
	pc = 5
	data memory:
		dataMem[ 0 ] = 8519688
		dataMem[ 1 ] = 8585225
		dataMem[ 2 ] = 1179650
		dataMem[ 3 ] = 1769475
		dataMem[ 4 ] = 1179650
		dataMem[ 5 ] = 1179650
		dataMem[ 6 ] = 1179650
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = 7
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 7
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 1179650 ( add 2 2 2 )
		pcPlus1 = 5
	ID/EX pipeline register:
		instruction = 1769475 ( add 3 3 3 )
		pcPlus1 = 4
		readRegA = 0
		readRegB = 0
		offset = 9 (Don't Care)
	EX/MEM pipeline register:
		instruction = 1179650 ( add 2 2 2 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 14
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8585225 ( lw 0 3 9 )
		writeData = 4
	WB/END pipeline register:
		instruction = 8519688 ( lw 0 2 8 )
		writeData = 7
end state

@@@
state before cycle 6 starts:
	pc = 6
	data memory:
		dataMem[ 0 ] = 8519688
		dataMem[ 1 ] = 8585225
		dataMem[ 2 ] = 1179650
		dataMem[ 3 ] = 1769475
		dataMem[ 4 ] = 1179650
		dataMem[ 5 ] = 1179650
		dataMem[ 6 ] = 1179650
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = 7
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 7
		reg[ 3 ] = 4
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 1179650 ( add 2 2 2 )
		pcPlus1 = 6
	ID/EX pipeline register:
		instruction = 1179650 ( add 2 2 2 )
		pcPlus1 = 5
		readRegA = 7
		readRegB = 7
		offset = 9 (Don't Care)
	EX/MEM pipeline register:
		instruction = 1769475 ( add 3 3 3 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 8
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 1179650 ( add 2 2 2 )
		writeData = 14
	WB/END pipeline register:
		instruction = 8585225 ( lw 0 3 9 )
		writeData = 4
end state

@@@
state before cycle 7 starts:
	pc = 7
	data memory:
		dataMem[ 0 ] = 8519688
		dataMem[ 1 ] = 8585225
		dataMem[ 2 ] = 1179650
		dataMem[ 3 ] = 1769475
		dataMem[ 4 ] = 1179650
		dataMem[ 5 ] = 1179650
		dataMem[ 6 ] = 1179650
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = 7
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 14
		reg[ 3 ] = 4
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 1179650 ( add 2 2 2 )
		pcPlus1 = 7
	ID/EX pipeline register:
		instruction = 1179650 ( add 2 2 2 )
		pcPlus1 = 6
		readRegA = 7
		readRegB = 7
		offset = 9 (Don't Care)
	EX/MEM pipeline register:
		instruction = 1179650 ( add 2 2 2 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 28
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 1769475 ( add 3 3 3 )
		writeData = 8
	WB/END pipeline register:
		instruction = 1179650 ( add 2 2 2 )
		writeData = 14
end state

@@@
state before cycle 8 starts:
	pc = 8
	data memory:
		dataMem[ 0 ] = 8519688
		dataMem[ 1 ] = 8585225
		dataMem[ 2 ] = 1179650
		dataMem[ 3 ] = 1769475
		dataMem[ 4 ] = 1179650
		dataMem[ 5 ] = 1179650
		dataMem[ 6 ] = 1179650
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = 7
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 14
		reg[ 3 ] = 8
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		pcPlus1 = 8
	ID/EX pipeline register:
		instruction = 1179650 ( add 2 2 2 )
		pcPlus1 = 7
		readRegA = 14
		readRegB = 14
		offset = 9 (Don't Care)
	EX/MEM pipeline register:
		instruction = 1179650 ( add 2 2 2 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 56
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 1179650 ( add 2 2 2 )
		writeData = 28
	WB/END pipeline register:
		instruction = 1769475 ( add 3 3 3 )
		writeData = 8
end state

@@@
state before cycle 9 starts:
	pc = 9
	data memory:
		dataMem[ 0 ] = 8519688
		dataMem[ 1 ] = 8585225
		dataMem[ 2 ] = 1179650
		dataMem[ 3 ] = 1769475
		dataMem[ 4 ] = 1179650
		dataMem[ 5 ] = 1179650
		dataMem[ 6 ] = 1179650
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = 7
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 28
		reg[ 3 ] = 8
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 7 ( add 0 0 7 )
		pcPlus1 = 9
	ID/EX pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		pcPlus1 = 8
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 1179650 ( add 2 2 2 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 112
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 1179650 ( add 2 2 2 )
		writeData = 56
	WB/END pipeline register:
		instruction = 1179650 ( add 2 2 2 )
		writeData = 28
end state

@@@
state before cycle 10 starts:
	pc = 10
	data memory:
		dataMem[ 0 ] = 8519688
		dataMem[ 1 ] = 8585225
		dataMem[ 2 ] = 1179650
		dataMem[ 3 ] = 1769475
		dataMem[ 4 ] = 1179650
		dataMem[ 5 ] = 1179650
		dataMem[ 6 ] = 1179650
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = 7
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 56
		reg[ 3 ] = 8
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 4 ( add 0 0 4 )
		pcPlus1 = 10
	ID/EX pipeline register:
		instruction = 7 ( add 0 0 7 )
		pcPlus1 = 9
		readRegA = 0
		readRegB = 0
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 112 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 1179650 ( add 2 2 2 )
		writeData = 112
	WB/END pipeline register:
		instruction = 1179650 ( add 2 2 2 )
		writeData = 56
end state
machine halted
total of 11 cycles executed
final state of machine:

@@@
state before cycle 11 starts:
	pc = 11
	data memory:
		dataMem[ 0 ] = 8519688
		dataMem[ 1 ] = 8585225
		dataMem[ 2 ] = 1179650
		dataMem[ 3 ] = 1769475
		dataMem[ 4 ] = 1179650
		dataMem[ 5 ] = 1179650
		dataMem[ 6 ] = 1179650
		dataMem[ 7 ] = 25165824
		dataMem[ 8 ] = 7
		dataMem[ 9 ] = 4
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 112
		reg[ 3 ] = 8
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0 ( add 0 0 0 )
		pcPlus1 = 11
	ID/EX pipeline register:
		instruction = 4 ( add 0 0 4 )
		pcPlus1 = 10
		readRegA = 0
		readRegB = 0
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 7 ( add 0 0 7 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		writeData = 112 (Don't Care)
	WB/END pipeline register:
		instruction = 1179650 ( add 2 2 2 )
		writeData = 112
end state
