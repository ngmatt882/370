instruction memory:
	instrMem[ 0 ] = lw 0 1 17
	instrMem[ 1 ] = lw 0 2 16
	instrMem[ 2 ] = lw 0 3 14
	instrMem[ 3 ] = lw 0 7 13
	instrMem[ 4 ] = add 0 0 5
	instrMem[ 5 ] = add 1 5 6
	instrMem[ 6 ] = sw 6 7 0
	instrMem[ 7 ] = lw 6 4 0
	instrMem[ 8 ] = sw 6 4 0
	instrMem[ 9 ] = add 5 3 5
	instrMem[ 10 ] = beq 5 2 1
	instrMem[ 11 ] = beq 0 0 65529
	instrMem[ 12 ] = halt 0 0 0
	instrMem[ 13 ] = add 0 0 100
	instrMem[ 14 ] = add 0 0 1
	instrMem[ 15 ] = .fill -1
	instrMem[ 16 ] = add 0 0 4
	instrMem[ 17 ] = add 0 0 18
	instrMem[ 18 ] = add 0 0 0
	instrMem[ 19 ] = add 0 0 7
	instrMem[ 20 ] = add 0 0 4
	instrMem[ 21 ] = add 0 0 6
	instrMem[ 22 ] = add 0 0 3

@@@
state before cycle 0 starts:
	pc = 0
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 0
		dataMem[ 19 ] = 7
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 0 (Don't Care)
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 1 starts:
	pc = 1
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 0
		dataMem[ 19 ] = 7
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8454161 ( lw 0 1 17 )
		pcPlus1 = 1
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 2 starts:
	pc = 2
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 0
		dataMem[ 19 ] = 7
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8519696 ( lw 0 2 16 )
		pcPlus1 = 2
	ID/EX pipeline register:
		instruction = 8454161 ( lw 0 1 17 )
		pcPlus1 = 1
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 17
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 3 starts:
	pc = 3
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 0
		dataMem[ 19 ] = 7
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8585230 ( lw 0 3 14 )
		pcPlus1 = 3
	ID/EX pipeline register:
		instruction = 8519696 ( lw 0 2 16 )
		pcPlus1 = 2
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 16
	EX/MEM pipeline register:
		instruction = 8454161 ( lw 0 1 17 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 17
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 4 starts:
	pc = 4
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 0
		dataMem[ 19 ] = 7
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8847373 ( lw 0 7 13 )
		pcPlus1 = 4
	ID/EX pipeline register:
		instruction = 8585230 ( lw 0 3 14 )
		pcPlus1 = 3
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 14
	EX/MEM pipeline register:
		instruction = 8519696 ( lw 0 2 16 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 16
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8454161 ( lw 0 1 17 )
		writeData = 18
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 5 starts:
	pc = 5
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 0
		dataMem[ 19 ] = 7
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 5 ( add 0 0 5 )
		pcPlus1 = 5
	ID/EX pipeline register:
		instruction = 8847373 ( lw 0 7 13 )
		pcPlus1 = 4
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 13
	EX/MEM pipeline register:
		instruction = 8585230 ( lw 0 3 14 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 14
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8519696 ( lw 0 2 16 )
		writeData = 4
	WB/END pipeline register:
		instruction = 8454161 ( lw 0 1 17 )
		writeData = 18
end state

@@@
state before cycle 6 starts:
	pc = 6
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 0
		dataMem[ 19 ] = 7
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 851974 ( add 1 5 6 )
		pcPlus1 = 6
	ID/EX pipeline register:
		instruction = 5 ( add 0 0 5 )
		pcPlus1 = 5
		readRegA = 0
		readRegB = 0
		offset = 13 (Don't Care)
	EX/MEM pipeline register:
		instruction = 8847373 ( lw 0 7 13 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 13
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8585230 ( lw 0 3 14 )
		writeData = 1
	WB/END pipeline register:
		instruction = 8519696 ( lw 0 2 16 )
		writeData = 4
end state

@@@
state before cycle 7 starts:
	pc = 7
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 0
		dataMem[ 19 ] = 7
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 16187392 ( sw 6 7 0 )
		pcPlus1 = 7
	ID/EX pipeline register:
		instruction = 851974 ( add 1 5 6 )
		pcPlus1 = 6
		readRegA = 18
		readRegB = 0
		offset = 13 (Don't Care)
	EX/MEM pipeline register:
		instruction = 5 ( add 0 0 5 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8847373 ( lw 0 7 13 )
		writeData = 100
	WB/END pipeline register:
		instruction = 8585230 ( lw 0 3 14 )
		writeData = 1
end state

@@@
state before cycle 8 starts:
	pc = 8
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 0
		dataMem[ 19 ] = 7
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 11796480 ( lw 6 4 0 )
		pcPlus1 = 8
	ID/EX pipeline register:
		instruction = 16187392 ( sw 6 7 0 )
		pcPlus1 = 7
		readRegA = 0
		readRegB = 0
		offset = 0
	EX/MEM pipeline register:
		instruction = 851974 ( add 1 5 6 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 18
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 5 ( add 0 0 5 )
		writeData = 0
	WB/END pipeline register:
		instruction = 8847373 ( lw 0 7 13 )
		writeData = 100
end state

@@@
state before cycle 9 starts:
	pc = 9
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 0
		dataMem[ 19 ] = 7
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		pcPlus1 = 9
	ID/EX pipeline register:
		instruction = 11796480 ( lw 6 4 0 )
		pcPlus1 = 8
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 0
	EX/MEM pipeline register:
		instruction = 16187392 ( sw 6 7 0 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 18
		readRegB = 100
	MEM/WB pipeline register:
		instruction = 851974 ( add 1 5 6 )
		writeData = 18
	WB/END pipeline register:
		instruction = 5 ( add 0 0 5 )
		writeData = 0
end state

@@@
state before cycle 10 starts:
	pc = 9
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 7
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 18
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		pcPlus1 = 9
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 9 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 11796480 ( lw 6 4 0 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 18
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 16187392 ( sw 6 7 0 )
		writeData = 18 (Don't Care)
	WB/END pipeline register:
		instruction = 851974 ( add 1 5 6 )
		writeData = 18
end state

@@@
state before cycle 11 starts:
	pc = 10
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 7
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 18
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 2818053 ( add 5 3 5 )
		pcPlus1 = 10
	ID/EX pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		pcPlus1 = 9
		readRegA = 18
		readRegB = 0
		offset = 0
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 18 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 11796480 ( lw 6 4 0 )
		writeData = 100
	WB/END pipeline register:
		instruction = 16187392 ( sw 6 7 0 )
		writeData = 18 (Don't Care)
end state

@@@
state before cycle 12 starts:
	pc = 11
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 7
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 0
		reg[ 6 ] = 18
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 19529729 ( beq 5 2 1 )
		pcPlus1 = 11
	ID/EX pipeline register:
		instruction = 2818053 ( add 5 3 5 )
		pcPlus1 = 10
		readRegA = 0
		readRegB = 1
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 18
		readRegB = 100
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 100 (Don't Care)
	WB/END pipeline register:
		instruction = 11796480 ( lw 6 4 0 )
		writeData = 100
end state

@@@
state before cycle 13 starts:
	pc = 12
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 7
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 0
		reg[ 6 ] = 18
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 16842745 ( beq 0 0 65529 )
		pcPlus1 = 12
	ID/EX pipeline register:
		instruction = 19529729 ( beq 5 2 1 )
		pcPlus1 = 11
		readRegA = 0
		readRegB = 4
		offset = 1
	EX/MEM pipeline register:
		instruction = 2818053 ( add 5 3 5 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 1
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		writeData = 100 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 100 (Don't Care)
end state

@@@
state before cycle 14 starts:
	pc = 13
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 7
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 0
		reg[ 6 ] = 18
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		pcPlus1 = 13
	ID/EX pipeline register:
		instruction = 16842745 ( beq 0 0 65529 )
		pcPlus1 = 12
		readRegA = 0
		readRegB = 0
		offset = -7
	EX/MEM pipeline register:
		instruction = 19529729 ( beq 5 2 1 )
		branchTarget 12
		eq ? False
		aluResult = 1 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 2818053 ( add 5 3 5 )
		writeData = 1
	WB/END pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		writeData = 100 (Don't Care)
end state

@@@
state before cycle 15 starts:
	pc = 14
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 7
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 1
		reg[ 6 ] = 18
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 100 ( add 0 0 100 )
		pcPlus1 = 14
	ID/EX pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		pcPlus1 = 13
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 16842745 ( beq 0 0 65529 )
		branchTarget 5
		eq ? True
		aluResult = 1 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 19529729 ( beq 5 2 1 )
		writeData = 1 (Don't Care)
	WB/END pipeline register:
		instruction = 2818053 ( add 5 3 5 )
		writeData = 1
end state

@@@
state before cycle 16 starts:
	pc = 5
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 7
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 1
		reg[ 6 ] = 18
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 15 (Don't Care)
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 14 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 1 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 16842745 ( beq 0 0 65529 )
		writeData = 1 (Don't Care)
	WB/END pipeline register:
		instruction = 19529729 ( beq 5 2 1 )
		writeData = 1 (Don't Care)
end state

@@@
state before cycle 17 starts:
	pc = 6
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 7
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 1
		reg[ 6 ] = 18
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 851974 ( add 1 5 6 )
		pcPlus1 = 6
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 15 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 1 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 1 (Don't Care)
	WB/END pipeline register:
		instruction = 16842745 ( beq 0 0 65529 )
		writeData = 1 (Don't Care)
end state

@@@
state before cycle 18 starts:
	pc = 7
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 7
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 1
		reg[ 6 ] = 18
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 16187392 ( sw 6 7 0 )
		pcPlus1 = 7
	ID/EX pipeline register:
		instruction = 851974 ( add 1 5 6 )
		pcPlus1 = 6
		readRegA = 18
		readRegB = 1
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 1 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 1 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 1 (Don't Care)
end state

@@@
state before cycle 19 starts:
	pc = 8
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 7
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 1
		reg[ 6 ] = 18
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 11796480 ( lw 6 4 0 )
		pcPlus1 = 8
	ID/EX pipeline register:
		instruction = 16187392 ( sw 6 7 0 )
		pcPlus1 = 7
		readRegA = 18
		readRegB = 100
		offset = 0
	EX/MEM pipeline register:
		instruction = 851974 ( add 1 5 6 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 19
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 1 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 1 (Don't Care)
end state

@@@
state before cycle 20 starts:
	pc = 9
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 7
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 1
		reg[ 6 ] = 18
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		pcPlus1 = 9
	ID/EX pipeline register:
		instruction = 11796480 ( lw 6 4 0 )
		pcPlus1 = 8
		readRegA = 18
		readRegB = 100 (Don't Care)
		offset = 0
	EX/MEM pipeline register:
		instruction = 16187392 ( sw 6 7 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 19
		readRegB = 100
	MEM/WB pipeline register:
		instruction = 851974 ( add 1 5 6 )
		writeData = 19
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 1 (Don't Care)
end state

@@@
state before cycle 21 starts:
	pc = 9
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 1
		reg[ 6 ] = 19
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		pcPlus1 = 9
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 9 (Don't Care)
		readRegA = 18 (Don't Care)
		readRegB = 100 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 11796480 ( lw 6 4 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 19
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 16187392 ( sw 6 7 0 )
		writeData = 19 (Don't Care)
	WB/END pipeline register:
		instruction = 851974 ( add 1 5 6 )
		writeData = 19
end state

@@@
state before cycle 22 starts:
	pc = 10
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 1
		reg[ 6 ] = 19
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 2818053 ( add 5 3 5 )
		pcPlus1 = 10
	ID/EX pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		pcPlus1 = 9
		readRegA = 19
		readRegB = 100
		offset = 0
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 19 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 11796480 ( lw 6 4 0 )
		writeData = 100
	WB/END pipeline register:
		instruction = 16187392 ( sw 6 7 0 )
		writeData = 19 (Don't Care)
end state

@@@
state before cycle 23 starts:
	pc = 11
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 1
		reg[ 6 ] = 19
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 19529729 ( beq 5 2 1 )
		pcPlus1 = 11
	ID/EX pipeline register:
		instruction = 2818053 ( add 5 3 5 )
		pcPlus1 = 10
		readRegA = 1
		readRegB = 1
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 19
		readRegB = 100
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 100 (Don't Care)
	WB/END pipeline register:
		instruction = 11796480 ( lw 6 4 0 )
		writeData = 100
end state

@@@
state before cycle 24 starts:
	pc = 12
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 1
		reg[ 6 ] = 19
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 16842745 ( beq 0 0 65529 )
		pcPlus1 = 12
	ID/EX pipeline register:
		instruction = 19529729 ( beq 5 2 1 )
		pcPlus1 = 11
		readRegA = 1
		readRegB = 4
		offset = 1
	EX/MEM pipeline register:
		instruction = 2818053 ( add 5 3 5 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 2
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		writeData = 100 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 100 (Don't Care)
end state

@@@
state before cycle 25 starts:
	pc = 13
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 1
		reg[ 6 ] = 19
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		pcPlus1 = 13
	ID/EX pipeline register:
		instruction = 16842745 ( beq 0 0 65529 )
		pcPlus1 = 12
		readRegA = 0
		readRegB = 0
		offset = -7
	EX/MEM pipeline register:
		instruction = 19529729 ( beq 5 2 1 )
		branchTarget 12
		eq ? False
		aluResult = 2 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 2818053 ( add 5 3 5 )
		writeData = 2
	WB/END pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		writeData = 100 (Don't Care)
end state

@@@
state before cycle 26 starts:
	pc = 14
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 2
		reg[ 6 ] = 19
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 100 ( add 0 0 100 )
		pcPlus1 = 14
	ID/EX pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		pcPlus1 = 13
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 16842745 ( beq 0 0 65529 )
		branchTarget 5
		eq ? True
		aluResult = 2 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 19529729 ( beq 5 2 1 )
		writeData = 2 (Don't Care)
	WB/END pipeline register:
		instruction = 2818053 ( add 5 3 5 )
		writeData = 2
end state

@@@
state before cycle 27 starts:
	pc = 5
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 2
		reg[ 6 ] = 19
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 15 (Don't Care)
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 14 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 2 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 16842745 ( beq 0 0 65529 )
		writeData = 2 (Don't Care)
	WB/END pipeline register:
		instruction = 19529729 ( beq 5 2 1 )
		writeData = 2 (Don't Care)
end state

@@@
state before cycle 28 starts:
	pc = 6
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 2
		reg[ 6 ] = 19
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 851974 ( add 1 5 6 )
		pcPlus1 = 6
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 15 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 2 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 2 (Don't Care)
	WB/END pipeline register:
		instruction = 16842745 ( beq 0 0 65529 )
		writeData = 2 (Don't Care)
end state

@@@
state before cycle 29 starts:
	pc = 7
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 2
		reg[ 6 ] = 19
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 16187392 ( sw 6 7 0 )
		pcPlus1 = 7
	ID/EX pipeline register:
		instruction = 851974 ( add 1 5 6 )
		pcPlus1 = 6
		readRegA = 18
		readRegB = 2
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 2 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 2 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 2 (Don't Care)
end state

@@@
state before cycle 30 starts:
	pc = 8
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 2
		reg[ 6 ] = 19
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 11796480 ( lw 6 4 0 )
		pcPlus1 = 8
	ID/EX pipeline register:
		instruction = 16187392 ( sw 6 7 0 )
		pcPlus1 = 7
		readRegA = 19
		readRegB = 100
		offset = 0
	EX/MEM pipeline register:
		instruction = 851974 ( add 1 5 6 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 20
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 2 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 2 (Don't Care)
end state

@@@
state before cycle 31 starts:
	pc = 9
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 4
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 2
		reg[ 6 ] = 19
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		pcPlus1 = 9
	ID/EX pipeline register:
		instruction = 11796480 ( lw 6 4 0 )
		pcPlus1 = 8
		readRegA = 19
		readRegB = 100 (Don't Care)
		offset = 0
	EX/MEM pipeline register:
		instruction = 16187392 ( sw 6 7 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 20
		readRegB = 100
	MEM/WB pipeline register:
		instruction = 851974 ( add 1 5 6 )
		writeData = 20
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 2 (Don't Care)
end state

@@@
state before cycle 32 starts:
	pc = 9
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 100
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 2
		reg[ 6 ] = 20
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		pcPlus1 = 9
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 9 (Don't Care)
		readRegA = 19 (Don't Care)
		readRegB = 100 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 11796480 ( lw 6 4 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 20
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 16187392 ( sw 6 7 0 )
		writeData = 20 (Don't Care)
	WB/END pipeline register:
		instruction = 851974 ( add 1 5 6 )
		writeData = 20
end state

@@@
state before cycle 33 starts:
	pc = 10
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 100
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 2
		reg[ 6 ] = 20
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 2818053 ( add 5 3 5 )
		pcPlus1 = 10
	ID/EX pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		pcPlus1 = 9
		readRegA = 20
		readRegB = 100
		offset = 0
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 20 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 11796480 ( lw 6 4 0 )
		writeData = 100
	WB/END pipeline register:
		instruction = 16187392 ( sw 6 7 0 )
		writeData = 20 (Don't Care)
end state

@@@
state before cycle 34 starts:
	pc = 11
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 100
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 2
		reg[ 6 ] = 20
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 19529729 ( beq 5 2 1 )
		pcPlus1 = 11
	ID/EX pipeline register:
		instruction = 2818053 ( add 5 3 5 )
		pcPlus1 = 10
		readRegA = 2
		readRegB = 1
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 20
		readRegB = 100
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 100 (Don't Care)
	WB/END pipeline register:
		instruction = 11796480 ( lw 6 4 0 )
		writeData = 100
end state

@@@
state before cycle 35 starts:
	pc = 12
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 100
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 2
		reg[ 6 ] = 20
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 16842745 ( beq 0 0 65529 )
		pcPlus1 = 12
	ID/EX pipeline register:
		instruction = 19529729 ( beq 5 2 1 )
		pcPlus1 = 11
		readRegA = 2
		readRegB = 4
		offset = 1
	EX/MEM pipeline register:
		instruction = 2818053 ( add 5 3 5 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 3
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		writeData = 100 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 100 (Don't Care)
end state

@@@
state before cycle 36 starts:
	pc = 13
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 100
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 2
		reg[ 6 ] = 20
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		pcPlus1 = 13
	ID/EX pipeline register:
		instruction = 16842745 ( beq 0 0 65529 )
		pcPlus1 = 12
		readRegA = 0
		readRegB = 0
		offset = -7
	EX/MEM pipeline register:
		instruction = 19529729 ( beq 5 2 1 )
		branchTarget 12
		eq ? False
		aluResult = 3 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 2818053 ( add 5 3 5 )
		writeData = 3
	WB/END pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		writeData = 100 (Don't Care)
end state

@@@
state before cycle 37 starts:
	pc = 14
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 100
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 3
		reg[ 6 ] = 20
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 100 ( add 0 0 100 )
		pcPlus1 = 14
	ID/EX pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		pcPlus1 = 13
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 16842745 ( beq 0 0 65529 )
		branchTarget 5
		eq ? True
		aluResult = 3 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 19529729 ( beq 5 2 1 )
		writeData = 3 (Don't Care)
	WB/END pipeline register:
		instruction = 2818053 ( add 5 3 5 )
		writeData = 3
end state

@@@
state before cycle 38 starts:
	pc = 5
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 100
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 3
		reg[ 6 ] = 20
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 15 (Don't Care)
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 14 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 3 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 16842745 ( beq 0 0 65529 )
		writeData = 3 (Don't Care)
	WB/END pipeline register:
		instruction = 19529729 ( beq 5 2 1 )
		writeData = 3 (Don't Care)
end state

@@@
state before cycle 39 starts:
	pc = 6
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 100
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 3
		reg[ 6 ] = 20
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 851974 ( add 1 5 6 )
		pcPlus1 = 6
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 15 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 3 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 3 (Don't Care)
	WB/END pipeline register:
		instruction = 16842745 ( beq 0 0 65529 )
		writeData = 3 (Don't Care)
end state

@@@
state before cycle 40 starts:
	pc = 7
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 100
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 3
		reg[ 6 ] = 20
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 16187392 ( sw 6 7 0 )
		pcPlus1 = 7
	ID/EX pipeline register:
		instruction = 851974 ( add 1 5 6 )
		pcPlus1 = 6
		readRegA = 18
		readRegB = 3
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 3 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 3 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 3 (Don't Care)
end state

@@@
state before cycle 41 starts:
	pc = 8
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 100
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 3
		reg[ 6 ] = 20
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 11796480 ( lw 6 4 0 )
		pcPlus1 = 8
	ID/EX pipeline register:
		instruction = 16187392 ( sw 6 7 0 )
		pcPlus1 = 7
		readRegA = 20
		readRegB = 100
		offset = 0
	EX/MEM pipeline register:
		instruction = 851974 ( add 1 5 6 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 21
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 3 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 3 (Don't Care)
end state

@@@
state before cycle 42 starts:
	pc = 9
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 100
		dataMem[ 21 ] = 6
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 3
		reg[ 6 ] = 20
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		pcPlus1 = 9
	ID/EX pipeline register:
		instruction = 11796480 ( lw 6 4 0 )
		pcPlus1 = 8
		readRegA = 20
		readRegB = 100 (Don't Care)
		offset = 0
	EX/MEM pipeline register:
		instruction = 16187392 ( sw 6 7 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 21
		readRegB = 100
	MEM/WB pipeline register:
		instruction = 851974 ( add 1 5 6 )
		writeData = 21
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 3 (Don't Care)
end state

@@@
state before cycle 43 starts:
	pc = 9
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 100
		dataMem[ 21 ] = 100
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 3
		reg[ 6 ] = 21
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		pcPlus1 = 9
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 9 (Don't Care)
		readRegA = 20 (Don't Care)
		readRegB = 100 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 11796480 ( lw 6 4 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 21
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 16187392 ( sw 6 7 0 )
		writeData = 21 (Don't Care)
	WB/END pipeline register:
		instruction = 851974 ( add 1 5 6 )
		writeData = 21
end state

@@@
state before cycle 44 starts:
	pc = 10
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 100
		dataMem[ 21 ] = 100
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 3
		reg[ 6 ] = 21
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 2818053 ( add 5 3 5 )
		pcPlus1 = 10
	ID/EX pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		pcPlus1 = 9
		readRegA = 21
		readRegB = 100
		offset = 0
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 21 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 11796480 ( lw 6 4 0 )
		writeData = 100
	WB/END pipeline register:
		instruction = 16187392 ( sw 6 7 0 )
		writeData = 21 (Don't Care)
end state

@@@
state before cycle 45 starts:
	pc = 11
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 100
		dataMem[ 21 ] = 100
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 3
		reg[ 6 ] = 21
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 19529729 ( beq 5 2 1 )
		pcPlus1 = 11
	ID/EX pipeline register:
		instruction = 2818053 ( add 5 3 5 )
		pcPlus1 = 10
		readRegA = 3
		readRegB = 1
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 21
		readRegB = 100
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 100 (Don't Care)
	WB/END pipeline register:
		instruction = 11796480 ( lw 6 4 0 )
		writeData = 100
end state

@@@
state before cycle 46 starts:
	pc = 12
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 100
		dataMem[ 21 ] = 100
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 3
		reg[ 6 ] = 21
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 16842745 ( beq 0 0 65529 )
		pcPlus1 = 12
	ID/EX pipeline register:
		instruction = 19529729 ( beq 5 2 1 )
		pcPlus1 = 11
		readRegA = 3
		readRegB = 4
		offset = 1
	EX/MEM pipeline register:
		instruction = 2818053 ( add 5 3 5 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 4
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		writeData = 100 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 100 (Don't Care)
end state

@@@
state before cycle 47 starts:
	pc = 13
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 100
		dataMem[ 21 ] = 100
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 3
		reg[ 6 ] = 21
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		pcPlus1 = 13
	ID/EX pipeline register:
		instruction = 16842745 ( beq 0 0 65529 )
		pcPlus1 = 12
		readRegA = 0
		readRegB = 0
		offset = -7
	EX/MEM pipeline register:
		instruction = 19529729 ( beq 5 2 1 )
		branchTarget 12
		eq ? True
		aluResult = 4 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 2818053 ( add 5 3 5 )
		writeData = 4
	WB/END pipeline register:
		instruction = 15990784 ( sw 6 4 0 )
		writeData = 100 (Don't Care)
end state

@@@
state before cycle 48 starts:
	pc = 12
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 100
		dataMem[ 21 ] = 100
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 4
		reg[ 6 ] = 21
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 14 (Don't Care)
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 13 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget 5 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 4 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 19529729 ( beq 5 2 1 )
		writeData = 4 (Don't Care)
	WB/END pipeline register:
		instruction = 2818053 ( add 5 3 5 )
		writeData = 4
end state

@@@
state before cycle 49 starts:
	pc = 13
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 100
		dataMem[ 21 ] = 100
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 4
		reg[ 6 ] = 21
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		pcPlus1 = 13
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 14 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 4 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 4 (Don't Care)
	WB/END pipeline register:
		instruction = 19529729 ( beq 5 2 1 )
		writeData = 4 (Don't Care)
end state

@@@
state before cycle 50 starts:
	pc = 14
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 100
		dataMem[ 21 ] = 100
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 4
		reg[ 6 ] = 21
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 100 ( add 0 0 100 )
		pcPlus1 = 14
	ID/EX pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		pcPlus1 = 13
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 4 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 4 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 4 (Don't Care)
end state

@@@
state before cycle 51 starts:
	pc = 15
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 100
		dataMem[ 21 ] = 100
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 4
		reg[ 6 ] = 21
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = 1 ( add 0 0 1 )
		pcPlus1 = 15
	ID/EX pipeline register:
		instruction = 100 ( add 0 0 100 )
		pcPlus1 = 14
		readRegA = 0
		readRegB = 0
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 4 (Don't Care)
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 4 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 4 (Don't Care)
end state
machine halted
total of 52 cycles executed
final state of machine:

@@@
state before cycle 52 starts:
	pc = 16
	data memory:
		dataMem[ 0 ] = 8454161
		dataMem[ 1 ] = 8519696
		dataMem[ 2 ] = 8585230
		dataMem[ 3 ] = 8847373
		dataMem[ 4 ] = 5
		dataMem[ 5 ] = 851974
		dataMem[ 6 ] = 16187392
		dataMem[ 7 ] = 11796480
		dataMem[ 8 ] = 15990784
		dataMem[ 9 ] = 2818053
		dataMem[ 10 ] = 19529729
		dataMem[ 11 ] = 16842745
		dataMem[ 12 ] = 25165824
		dataMem[ 13 ] = 100
		dataMem[ 14 ] = 1
		dataMem[ 15 ] = -1
		dataMem[ 16 ] = 4
		dataMem[ 17 ] = 18
		dataMem[ 18 ] = 100
		dataMem[ 19 ] = 100
		dataMem[ 20 ] = 100
		dataMem[ 21 ] = 100
		dataMem[ 22 ] = 3
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 18
		reg[ 2 ] = 4
		reg[ 3 ] = 1
		reg[ 4 ] = 100
		reg[ 5 ] = 4
		reg[ 6 ] = 21
		reg[ 7 ] = 100
	IF/ID pipeline register:
		instruction = -1 ( .fill -1 )
		pcPlus1 = 16
	ID/EX pipeline register:
		instruction = 1 ( add 0 0 1 )
		pcPlus1 = 15
		readRegA = 0
		readRegB = 0
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 100 ( add 0 0 100 )
		branchTarget -1 (Don't Care)
		eq ? True (Don't Care)
		aluResult = 0
		readRegB = 100 (Don't Care)
	MEM/WB pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		writeData = 4 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 4 (Don't Care)
end state
