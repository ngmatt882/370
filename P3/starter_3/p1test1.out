instruction memory:
	instrMem[ 0 ] = lw 0 1 6
	instrMem[ 1 ] = lw 0 2 7
	instrMem[ 2 ] = nor 1 2 3
	instrMem[ 3 ] = add 4 1 2
	instrMem[ 4 ] = add 3 1 4
	instrMem[ 5 ] = halt 0 0 0
	instrMem[ 6 ] = add 0 0 1
	instrMem[ 7 ] = add 0 0 36766

@@@
state before cycle 0 starts:
	pc = 0
	data memory:
		dataMem[ 0 ] = 8454150
		dataMem[ 1 ] = 8519687
		dataMem[ 2 ] = 4849667
		dataMem[ 3 ] = 2162690
		dataMem[ 4 ] = 1638404
		dataMem[ 5 ] = 25165824
		dataMem[ 6 ] = 1
		dataMem[ 7 ] = 36766
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 0 (Don't Care)
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 1 starts:
	pc = 1
	data memory:
		dataMem[ 0 ] = 8454150
		dataMem[ 1 ] = 8519687
		dataMem[ 2 ] = 4849667
		dataMem[ 3 ] = 2162690
		dataMem[ 4 ] = 1638404
		dataMem[ 5 ] = 25165824
		dataMem[ 6 ] = 1
		dataMem[ 7 ] = 36766
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8454150 ( lw 0 1 6 )
		pcPlus1 = 1
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 0 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 2 starts:
	pc = 2
	data memory:
		dataMem[ 0 ] = 8454150
		dataMem[ 1 ] = 8519687
		dataMem[ 2 ] = 4849667
		dataMem[ 3 ] = 2162690
		dataMem[ 4 ] = 1638404
		dataMem[ 5 ] = 25165824
		dataMem[ 6 ] = 1
		dataMem[ 7 ] = 36766
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 8519687 ( lw 0 2 7 )
		pcPlus1 = 2
	ID/EX pipeline register:
		instruction = 8454150 ( lw 0 1 6 )
		pcPlus1 = 1
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 6
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 3 starts:
	pc = 3
	data memory:
		dataMem[ 0 ] = 8454150
		dataMem[ 1 ] = 8519687
		dataMem[ 2 ] = 4849667
		dataMem[ 3 ] = 2162690
		dataMem[ 4 ] = 1638404
		dataMem[ 5 ] = 25165824
		dataMem[ 6 ] = 1
		dataMem[ 7 ] = 36766
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 4849667 ( nor 1 2 3 )
		pcPlus1 = 3
	ID/EX pipeline register:
		instruction = 8519687 ( lw 0 2 7 )
		pcPlus1 = 2
		readRegA = 0
		readRegB = 0 (Don't Care)
		offset = 7
	EX/MEM pipeline register:
		instruction = 8454150 ( lw 0 1 6 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 6
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 4 starts:
	pc = 3
	data memory:
		dataMem[ 0 ] = 8454150
		dataMem[ 1 ] = 8519687
		dataMem[ 2 ] = 4849667
		dataMem[ 3 ] = 2162690
		dataMem[ 4 ] = 1638404
		dataMem[ 5 ] = 25165824
		dataMem[ 6 ] = 1
		dataMem[ 7 ] = 36766
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 0
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 4849667 ( nor 1 2 3 )
		pcPlus1 = 3
	ID/EX pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		pcPlus1 = 3 (Don't Care)
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 7 (Don't Care)
	EX/MEM pipeline register:
		instruction = 8519687 ( lw 0 2 7 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 7
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8454150 ( lw 0 1 6 )
		writeData = 1
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 0 (Don't Care)
end state

@@@
state before cycle 5 starts:
	pc = 4
	data memory:
		dataMem[ 0 ] = 8454150
		dataMem[ 1 ] = 8519687
		dataMem[ 2 ] = 4849667
		dataMem[ 3 ] = 2162690
		dataMem[ 4 ] = 1638404
		dataMem[ 5 ] = 25165824
		dataMem[ 6 ] = 1
		dataMem[ 7 ] = 36766
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 0
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 2162690 ( add 4 1 2 )
		pcPlus1 = 4
	ID/EX pipeline register:
		instruction = 4849667 ( nor 1 2 3 )
		pcPlus1 = 3
		readRegA = 0
		readRegB = 0
		offset = 7 (Don't Care)
	EX/MEM pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 7 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 8519687 ( lw 0 2 7 )
		writeData = 36766
	WB/END pipeline register:
		instruction = 8454150 ( lw 0 1 6 )
		writeData = 1
end state

@@@
state before cycle 6 starts:
	pc = 5
	data memory:
		dataMem[ 0 ] = 8454150
		dataMem[ 1 ] = 8519687
		dataMem[ 2 ] = 4849667
		dataMem[ 3 ] = 2162690
		dataMem[ 4 ] = 1638404
		dataMem[ 5 ] = 25165824
		dataMem[ 6 ] = 1
		dataMem[ 7 ] = 36766
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 36766
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 1638404 ( add 3 1 4 )
		pcPlus1 = 5
	ID/EX pipeline register:
		instruction = 2162690 ( add 4 1 2 )
		pcPlus1 = 4
		readRegA = 0
		readRegB = 1
		offset = 7 (Don't Care)
	EX/MEM pipeline register:
		instruction = 4849667 ( nor 1 2 3 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = -36768
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 36766 (Don't Care)
	WB/END pipeline register:
		instruction = 8519687 ( lw 0 2 7 )
		writeData = 36766
end state

@@@
state before cycle 7 starts:
	pc = 6
	data memory:
		dataMem[ 0 ] = 8454150
		dataMem[ 1 ] = 8519687
		dataMem[ 2 ] = 4849667
		dataMem[ 3 ] = 2162690
		dataMem[ 4 ] = 1638404
		dataMem[ 5 ] = 25165824
		dataMem[ 6 ] = 1
		dataMem[ 7 ] = 36766
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 36766
		reg[ 3 ] = 0
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		pcPlus1 = 6
	ID/EX pipeline register:
		instruction = 1638404 ( add 3 1 4 )
		pcPlus1 = 5
		readRegA = 0
		readRegB = 1
		offset = 7 (Don't Care)
	EX/MEM pipeline register:
		instruction = 2162690 ( add 4 1 2 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 1
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 4849667 ( nor 1 2 3 )
		writeData = -36768
	WB/END pipeline register:
		instruction = 29360128 ( noop 0 0 0 )
		writeData = 36766 (Don't Care)
end state

@@@
state before cycle 8 starts:
	pc = 7
	data memory:
		dataMem[ 0 ] = 8454150
		dataMem[ 1 ] = 8519687
		dataMem[ 2 ] = 4849667
		dataMem[ 3 ] = 2162690
		dataMem[ 4 ] = 1638404
		dataMem[ 5 ] = 25165824
		dataMem[ 6 ] = 1
		dataMem[ 7 ] = 36766
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 36766
		reg[ 3 ] = -36768
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 1 ( add 0 0 1 )
		pcPlus1 = 7
	ID/EX pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		pcPlus1 = 6
		readRegA = 0 (Don't Care)
		readRegB = 0 (Don't Care)
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 1638404 ( add 3 1 4 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = -36767
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 2162690 ( add 4 1 2 )
		writeData = 1
	WB/END pipeline register:
		instruction = 4849667 ( nor 1 2 3 )
		writeData = -36768
end state

@@@
state before cycle 9 starts:
	pc = 8
	data memory:
		dataMem[ 0 ] = 8454150
		dataMem[ 1 ] = 8519687
		dataMem[ 2 ] = 4849667
		dataMem[ 3 ] = 2162690
		dataMem[ 4 ] = 1638404
		dataMem[ 5 ] = 25165824
		dataMem[ 6 ] = 1
		dataMem[ 7 ] = 36766
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 1
		reg[ 3 ] = -36768
		reg[ 4 ] = 0
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 36766 ( add 0 0 36766 )
		pcPlus1 = 8
	ID/EX pipeline register:
		instruction = 1 ( add 0 0 1 )
		pcPlus1 = 7
		readRegA = 0
		readRegB = 0
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = -36767 (Don't Care)
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 1638404 ( add 3 1 4 )
		writeData = -36767
	WB/END pipeline register:
		instruction = 2162690 ( add 4 1 2 )
		writeData = 1
end state
machine halted
total of 10 cycles executed
final state of machine:

@@@
state before cycle 10 starts:
	pc = 9
	data memory:
		dataMem[ 0 ] = 8454150
		dataMem[ 1 ] = 8519687
		dataMem[ 2 ] = 4849667
		dataMem[ 3 ] = 2162690
		dataMem[ 4 ] = 1638404
		dataMem[ 5 ] = 25165824
		dataMem[ 6 ] = 1
		dataMem[ 7 ] = 36766
	registers:
		reg[ 0 ] = 0
		reg[ 1 ] = 1
		reg[ 2 ] = 1
		reg[ 3 ] = -36768
		reg[ 4 ] = -36767
		reg[ 5 ] = 0
		reg[ 6 ] = 0
		reg[ 7 ] = 0
	IF/ID pipeline register:
		instruction = 0 ( add 0 0 0 )
		pcPlus1 = 9
	ID/EX pipeline register:
		instruction = 36766 ( add 0 0 36766 )
		pcPlus1 = 8
		readRegA = 0
		readRegB = 0
		offset = 0 (Don't Care)
	EX/MEM pipeline register:
		instruction = 1 ( add 0 0 1 )
		branchTarget -1 (Don't Care)
		eq ? False (Don't Care)
		aluResult = 0
		readRegB = 0 (Don't Care)
	MEM/WB pipeline register:
		instruction = 25165824 ( halt 0 0 0 )
		writeData = -36767 (Don't Care)
	WB/END pipeline register:
		instruction = 1638404 ( add 3 1 4 )
		writeData = -36767
end state
